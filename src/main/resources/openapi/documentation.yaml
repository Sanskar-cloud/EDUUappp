openapi: "3.0.3"
info:
  title: "Application API"
  description: "Application API"
  version: "1.0.0"
servers:
  - url: "http://192.168.29.108:8082"
paths:
  /api/user/create:
    post:
      summary: "Create a user account"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAccountRequest"
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasicApiResponse"
  /api/user/login:
    post:
      summary: "Login user"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasicApiResponse"
  /api/user/reset_password:
    post:
      summary: "Reset user password"
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResetPasswordRequest"
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasicApiResponse"
  /api/user/authenticate:
    get:
      summary: "Authenticate user"
      security:
        - bearerAuth: []
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                type: "object"
  /api/course/popular_categories:
    get:
      summary: "Get popular categories"
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          required: true
          schema:
            type: integer
        - in: query
          name: pageSize
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                type: "object"
  /api/course/category/create:
    post:
      summary: "Create a new category"
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                categoryName:
                  type: string
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                type: "object"
  /api/course/category/update:
    post:
      summary: "Update an existing category"
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: categoryId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                categoryName:
                  type: string
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                type: "object"
  /api/course/category/delete:
    delete:
      summary: "Delete an existing category"
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: categoryId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                type: "object"
components:
  schemas:
    CreateAccountRequest:
      type: "object"
      properties:
        email:
          type: "string"
        password:
          type: "string"
        username:
          type: "string"
        accountType:
          type: "string"
    LoginRequest:
      type: "object"
      properties:
        email:
          type: "string"
        password:
          type: "string"
    ResetPasswordRequest:
      type: "object"
      properties:
        oldPassword:
          type: "string"
        newPassword:
          type: "string"
    BasicApiResponse:
      type: "object"
      properties:
        successful:
          type: "boolean"
        message:
          type: "string"
